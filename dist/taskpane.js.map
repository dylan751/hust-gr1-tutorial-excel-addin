{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t41: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* eslint-disable office-addins/load-object-before-read */\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n/**\n * Your Excel.js business logic will be added to the function that is passed to Excel.run. This logic does not execute immediately. Instead, it is added to a queue of pending commands.\n * The context.sync method sends all queued commands to Excel for execution.\n * The tryCatch function will be used by all the functions interacting with the workbook from the task pane. Catching Office JavaScript errors in this fashion is a convenient way to generically handle any uncaught errors.\n */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    // Assign event handlers and other initialization logic.\n    document.getElementById(\"create-table\").onclick = () => tryCatch(createTable);\n    document.getElementById(\"filter-table\").onclick = () => tryCatch(filterTable);\n    document.getElementById(\"sort-table\").onclick = () => tryCatch(sortTable);\n    document.getElementById(\"create-chart\").onclick = () => tryCatch(createChart);\n    document.getElementById(\"freeze-header\").onclick = () => tryCatch(freezeHeader);\n  }\n});\n\nasync function createTable() {\n  await Excel.run(async (context) => {\n    // 1. Queue table creation logic here.\n\n    /**\n     * The code creates a table by using the add method of a worksheet's table collection,\n     * which always exists even if it is empty. This is the standard way that Excel.js objects are created.\n     * There are no class constructor APIs, and you never use a new operator to create an Excel object.\n     * Instead, you add to a parent collection object.\n     */\n\n    /**\n     * The first parameter of the add method is the range of only the top row of the table,\n     * not the entire range the table will ultimately use. This is because when the add-in\n     * populates the data rows (in the next step), it will add new rows to the table instead of\n     * writing values to the cells of existing rows. This is a common pattern, because the number\n     * of rows a table will have is often unknown when the table is created.\n     */\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.add(\"A1:D1\", true /*hasHeaders*/);\n    expensesTable.name = \"ExpensesTable\";\n\n    // 2. Queue commands to populate the table with data.\n    /**\n     * The cell values of a range are set with an array of arrays.\n     * New rows are created in a table by calling the add method of the table's row collection.\n     * You can add multiple rows in a single call of add by including multiple cell value arrays\n     * in the parent array that is passed as the second parameter.\n     */\n    expensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n    expensesTable.rows.add(null /*add at the end*/, [\n      [\"1/1/2017\", \"The Phone Company\", \"Communications\", \"120\"],\n      [\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"142.33\"],\n      [\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"27.9\"],\n      [\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"33\"],\n      [\"1/11/2017\", \"Bellows College\", \"Education\", \"350.1\"],\n      [\"1/15/2017\", \"Trey Research\", \"Other\", \"135\"],\n      [\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"97.88\"],\n    ]);\n\n    // 3. Queue commands to format the table.\n    /**\n     * The code gets a reference to the Amount column by passing its zero-based index to the getItemAt method of the table's column collection.\n     * The code then formats the range of the Amount column as Euros to the second decimal.\n     * Finally, it ensures that the width of the columns and height of the rows is big enough to fit the longest (or tallest) data item. Notice that the code must get Range objects to format. TableColumn and TableRow objects do not have format properties.\n     */\n    expensesTable.columns.getItemAt(3).getRange().numberFormat = [[\"\\u20AC#,##0.00\"]];\n    expensesTable.getRange().format.autofitColumns();\n    expensesTable.getRange().format.autofitRows();\n\n    await context.sync();\n  });\n}\n\nasync function filterTable() {\n  await Excel.run(async (context) => {\n    // 1. Queue commands to filter out all expense categories except Groceries and Education.\n    /**\n     * The code first gets a reference to the column that needs filtering by passing the column name\n     *  to the getItem method, instead of passing its index to the getItemAt method as the createTable\n     *  method does. Since users can move table columns, the column at a given index might change after\n     * the table is created. Hence, it is safer to use the column name to get a reference to the column.\n     *  We used getItemAt safely in the preceding tutorial, because we used it in the very same method\n     *  that creates the table, so there is no chance that a user has moved the column.\n     */\n\n    /**\n     * The applyValuesFilter method is one of several filtering methods on the Filter object.\n     */\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.getItem(\"ExpensesTable\");\n    const categoryFilter = expensesTable.columns.getItem(\"Category\").filter;\n    categoryFilter.applyValuesFilter([\"Education\", \"Groceries\"]);\n\n    await context.sync();\n  });\n}\n\nasync function sortTable() {\n  await Excel.run(async (context) => {\n    // 1. Queue commands to sort the table by Merchant name.\n    /**\n     * The code creates an array of `SortField` objects, which has just one member since the add-in only sorts on the Merchant column.\n     * The `key` property of a `SortField` object is the zero-based index of the column used for sorting. The rows of the table are sorted based on the values in the referenced column.\n     * The `sort` member of a `Table` is a `TableSort` object, not a method. The `SortFields` are passed to the `TableSort` object's `apply` method.\n     */\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.getItem(\"ExpensesTable\");\n    const sortFields = [\n      {\n        key: 1, // Merchant column\n        ascending: false,\n      },\n    ];\n\n    expensesTable.sort.apply(sortFields);\n\n    await context.sync();\n  });\n}\n\nasync function createChart() {\n  await Excel.run(async (context) => {\n    // 1. Queue commands to get the range of data to be charted.\n    /**\n     * in order to exclude the header row, the code uses the Table.getDataBodyRange method\n     * to get the range of data you want to chart instead of the getRange method.\n     */\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    const expensesTable = currentWorksheet.tables.getItem(\"ExpensesTable\");\n    const dataRange = expensesTable.getDataBodyRange();\n\n    // 2. Queue command to create the chart and define its type.\n    /**\n     * The first parameter to the add method specifies the type of chart. There are several dozen types.\n     * The second parameter specifies the range of data to include in the chart.\n     * The third parameter determines whether a series of data points from the table should be charted row-wise or column-wise. The option auto tells Excel to decide the best method.\n     */\n    const chart = currentWorksheet.charts.add(\"ColumnClustered\", dataRange, \"Auto\");\n\n    // 3. Queue commands to position and format the chart.\n    /**\n     * The parameters to the setPosition method specify the upper left and\n     * lower right cells of the worksheet area that should contain the chart.\n     * Excel can adjust things like line width to make the chart look good in the space it has been given.\n     *\n     * A \"series\" is a set of data points from a column of the table.\n     * Since there is only one non-string column in the table, Excel infers that the column\n     * is the only column of data points to chart. It interprets the other columns as chart labels.\n     * So there will be just one series in the chart and it will have index 0.\n     * This is the one to label with \"Value in €\".\n     */\n    chart.setPosition(\"A15\", \"F30\");\n    chart.title.text = \"Expenses\";\n    chart.legend.position = \"Right\";\n    chart.legend.format.fill.setSolidColor(\"white\");\n    chart.dataLabels.format.font.size = 15;\n    chart.dataLabels.format.font.color = \"black\";\n    chart.series.getItemAt(0).name = \"Value in \\u20AC\";\n\n    await context.sync();\n  });\n}\n\n/**\n * When a table is long enough that a user must scroll to see some rows,\n * the header row can scroll out of sight. In this step of the tutorial,\n * you'll freeze the header row of the table that you created previously,\n * so that it remains visible even as the user scrolls down the worksheet.\n */\nasync function freezeHeader() {\n  await Excel.run(async (context) => {\n    // 1. Queue commands to keep the header visible when the user scrolls.\n    /**\n     * The Worksheet.freezePanes collection is a set of panes in the worksheet\n     * that are pinned, or frozen, in place when the worksheet is scrolled.\n\n     * The freezeRows method takes as a parameter the number of rows, from the top, \n     * that are to be pinned in place. We pass 1 to pin the first row in place.\n     */\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    currentWorksheet.freezePanes.freezeRows(1);\n\n    await context.sync();\n  });\n}\n\n/**\n * Add a button to the ribbon that toggles worksheet protection on and off.\n */\n\n/** Default helper for invoking an action and handling errors. */\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    console.error(error);\n  }\n}\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\"> Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body. </h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <button class=\\\"ms-Button\\\" id=\\\"create-table\\\">Create Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"filter-table\\\">Filter Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"sort-table\\\">Sort Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"create-chart\\\">Create Chart</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"freeze-header\\\">Freeze Header</button><br/><br/> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","Op","hasOwn","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","createTable","_createTable","_callee2","_context2","Excel","run","_ref","_callee","currentWorksheet","expensesTable","_context","workbook","worksheets","getActiveWorksheet","tables","add","getHeaderRowRange","rows","columns","getItemAt","getRange","numberFormat","format","autofitColumns","autofitRows","sync","_x2","filterTable","_filterTable","_callee4","_context4","_ref2","_callee3","_context3","getItem","filter","applyValuesFilter","_x3","sortTable","_sortTable","_callee6","_context6","_ref3","_callee5","sortFields","_context5","ascending","sort","_x4","createChart","_createChart","_callee8","_context8","_ref4","_callee7","dataRange","chart","_context7","getDataBodyRange","charts","setPosition","title","text","legend","position","fill","setSolidColor","dataLabels","font","size","color","series","_x5","freezeHeader","_freezeHeader","_callee10","_context10","_ref5","_callee9","_context9","freezePanes","freezeRows","_x6","_x","_tryCatch","_callee11","callback","_context11","t0","console","Office","onReady","host","HostType","getElementById","style","display","onclick","___HTML_LOADER_IMPORT_0___","URL","___HTML_LOADER_IMPORT_1___"],"sourceRoot":""}